name: Build Windows MSI

on:
  workflow_dispatch:
  push:
    tags: [ 'v*' ]

jobs:
  build-msi:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set UTF-8 encoding
      run: |
        chcp 65001
        echo "PYTHONIOENCODING=utf-8" >> $env:GITHUB_ENV
        echo "PYTHONUTF8=1" >> $env:GITHUB_ENV
        echo "LANG=en_US.UTF-8" >> $env:GITHUB_ENV
        echo "LC_ALL=en_US.UTF-8" >> $env:GITHUB_ENV
    
    - name: Install dependencies
      env:
        PYTHONIOENCODING: utf-8
        PYTHONUTF8: 1
      run: |
        chcp 65001
        python -m pip install --upgrade pip
        pip install cx-freeze>=6.14.0
        pip install -r requirements.txt
        pip list
    
    - name: Test imports and encoding
      env:
        PYTHONIOENCODING: utf-8
        PYTHONUTF8: 1
      run: |
        chcp 65001
        python fix_encoding.py
        python -c "import tkinter; print('OK: tkinter available')"
        python -c "import pathlib; print('OK: pathlib available')"
    
    - name: Build MSI installer
      env:
        PYTHONIOENCODING: utf-8
        PYTHONUTF8: 1
      run: |
        echo "Starting MSI build process..."
        chcp 65001
        python fix_encoding.py
        echo "Starting build step..."
        python setup_msi.py build
        echo "Build completed, creating MSI..."
        python setup_msi.py bdist_msi --verbose
        echo "MSI creation completed."
    
    - name: List build artifacts
      run: |
        dir dist
        if (Test-Path "dist\*.msi") {
          Write-Host "SUCCESS: MSI installer created successfully"
          Get-ChildItem "dist\*.msi" | ForEach-Object {
            $size = $_.Length / 1MB
            Write-Host "File: $($_.Name), Size: $([math]::Round($size, 2)) MB"
          }
        } else {
          Write-Host "ERROR: MSI installer not found"
          exit 1
        }
    
    - name: Upload MSI artifact
      uses: actions/upload-artifact@v4
      with:
        name: PS2PDF-Converter-MSI
        path: dist/*.msi
    
    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*.msi
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
